// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: point_feature.proto

package org.gbif.maps.io;

public final class PointFeature {
  private PointFeature() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface PointFeaturesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.gbif.maps.io.PointFeatures)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    java.util.List<org.gbif.maps.io.PointFeature.PointFeatures.Feature> 
        getFeaturesList();
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    org.gbif.maps.io.PointFeature.PointFeatures.Feature getFeatures(int index);
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    int getFeaturesCount();
  }
  /**
   * <pre>
   **
   * A basic point feature that holds a latitude, longitude, basisOfRecord, year and the count.
   * </pre>
   *
   * Protobuf type {@code org.gbif.maps.io.PointFeatures}
   */
  public  static final class PointFeatures extends
      com.google.protobuf.GeneratedMessageLite<
          PointFeatures, PointFeatures.Builder> implements
      // @@protoc_insertion_point(message_implements:org.gbif.maps.io.PointFeatures)
      PointFeaturesOrBuilder {
    private PointFeatures() {
      features_ = emptyProtobufList();
    }
    public interface FeatureOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.gbif.maps.io.PointFeatures.Feature)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>required double latitude = 1;</code>
       */
      boolean hasLatitude();
      /**
       * <code>required double latitude = 1;</code>
       */
      double getLatitude();

      /**
       * <code>required double longitude = 2;</code>
       */
      boolean hasLongitude();
      /**
       * <code>required double longitude = 2;</code>
       */
      double getLongitude();

      /**
       * <code>required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;</code>
       */
      boolean hasBasisOfRecord();
      /**
       * <code>required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;</code>
       */
      org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord getBasisOfRecord();

      /**
       * <code>optional uint32 year = 4 [default = 0];</code>
       */
      boolean hasYear();
      /**
       * <code>optional uint32 year = 4 [default = 0];</code>
       */
      int getYear();

      /**
       * <code>optional uint32 count = 5 [default = 1];</code>
       */
      boolean hasCount();
      /**
       * <code>optional uint32 count = 5 [default = 1];</code>
       */
      int getCount();
    }
    /**
     * Protobuf type {@code org.gbif.maps.io.PointFeatures.Feature}
     */
    public  static final class Feature extends
        com.google.protobuf.GeneratedMessageLite<
            Feature, Feature.Builder> implements
        // @@protoc_insertion_point(message_implements:org.gbif.maps.io.PointFeatures.Feature)
        FeatureOrBuilder {
      private Feature() {
        count_ = 1;
      }
      /**
       * <pre>
       * this should hold the same values that the GBIF API support for consistency
       * </pre>
       *
       * Protobuf enum {@code org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord}
       */
      public enum BasisOfRecord
          implements com.google.protobuf.Internal.EnumLite {
        /**
         * <pre>
         * Deprecated
         * </pre>
         *
         * <code>UNKNOWN = 0;</code>
         */
        UNKNOWN(0),
        /**
         * <code>PRESERVED_SPECIMEN = 1;</code>
         */
        PRESERVED_SPECIMEN(1),
        /**
         * <code>FOSSIL_SPECIMEN = 2;</code>
         */
        FOSSIL_SPECIMEN(2),
        /**
         * <code>LIVING_SPECIMEN = 3;</code>
         */
        LIVING_SPECIMEN(3),
        /**
         * <code>OBSERVATION = 4;</code>
         */
        OBSERVATION(4),
        /**
         * <code>HUMAN_OBSERVATION = 5;</code>
         */
        HUMAN_OBSERVATION(5),
        /**
         * <code>MACHINE_OBSERVATION = 6;</code>
         */
        MACHINE_OBSERVATION(6),
        /**
         * <code>MATERIAL_SAMPLE = 7;</code>
         */
        MATERIAL_SAMPLE(7),
        /**
         * <pre>
         * Deprecated
         * </pre>
         *
         * <code>LITERATURE = 8;</code>
         */
        LITERATURE(8),
        /**
         * <code>OCCURRENCE = 9;</code>
         */
        OCCURRENCE(9),
        /**
         * <code>MATERIAL_CITATION = 10;</code>
         */
        MATERIAL_CITATION(10),
        ;

        /**
         * <pre>
         * Deprecated
         * </pre>
         *
         * <code>UNKNOWN = 0;</code>
         */
        public static final int UNKNOWN_VALUE = 0;
        /**
         * <code>PRESERVED_SPECIMEN = 1;</code>
         */
        public static final int PRESERVED_SPECIMEN_VALUE = 1;
        /**
         * <code>FOSSIL_SPECIMEN = 2;</code>
         */
        public static final int FOSSIL_SPECIMEN_VALUE = 2;
        /**
         * <code>LIVING_SPECIMEN = 3;</code>
         */
        public static final int LIVING_SPECIMEN_VALUE = 3;
        /**
         * <code>OBSERVATION = 4;</code>
         */
        public static final int OBSERVATION_VALUE = 4;
        /**
         * <code>HUMAN_OBSERVATION = 5;</code>
         */
        public static final int HUMAN_OBSERVATION_VALUE = 5;
        /**
         * <code>MACHINE_OBSERVATION = 6;</code>
         */
        public static final int MACHINE_OBSERVATION_VALUE = 6;
        /**
         * <code>MATERIAL_SAMPLE = 7;</code>
         */
        public static final int MATERIAL_SAMPLE_VALUE = 7;
        /**
         * <pre>
         * Deprecated
         * </pre>
         *
         * <code>LITERATURE = 8;</code>
         */
        public static final int LITERATURE_VALUE = 8;
        /**
         * <code>OCCURRENCE = 9;</code>
         */
        public static final int OCCURRENCE_VALUE = 9;
        /**
         * <code>MATERIAL_CITATION = 10;</code>
         */
        public static final int MATERIAL_CITATION_VALUE = 10;


        @java.lang.Override
        public final int getNumber() {
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static BasisOfRecord valueOf(int value) {
          return forNumber(value);
        }

        public static BasisOfRecord forNumber(int value) {
          switch (value) {
            case 0: return UNKNOWN;
            case 1: return PRESERVED_SPECIMEN;
            case 2: return FOSSIL_SPECIMEN;
            case 3: return LIVING_SPECIMEN;
            case 4: return OBSERVATION;
            case 5: return HUMAN_OBSERVATION;
            case 6: return MACHINE_OBSERVATION;
            case 7: return MATERIAL_SAMPLE;
            case 8: return LITERATURE;
            case 9: return OCCURRENCE;
            case 10: return MATERIAL_CITATION;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<BasisOfRecord>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            BasisOfRecord> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<BasisOfRecord>() {
                @java.lang.Override
                public BasisOfRecord findValueByNumber(int number) {
                  return BasisOfRecord.forNumber(number);
                }
              };

        private final int value;

        private BasisOfRecord(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord)
      }

      private int bitField0_;
      public static final int LATITUDE_FIELD_NUMBER = 1;
      private double latitude_;
      /**
       * <code>required double latitude = 1;</code>
       */
      @java.lang.Override
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double latitude = 1;</code>
       */
      @java.lang.Override
      public double getLatitude() {
        return latitude_;
      }
      /**
       * <code>required double latitude = 1;</code>
       */
      private void setLatitude(double value) {
        bitField0_ |= 0x00000001;
        latitude_ = value;
      }
      /**
       * <code>required double latitude = 1;</code>
       */
      private void clearLatitude() {
        bitField0_ = (bitField0_ & ~0x00000001);
        latitude_ = 0D;
      }

      public static final int LONGITUDE_FIELD_NUMBER = 2;
      private double longitude_;
      /**
       * <code>required double longitude = 2;</code>
       */
      @java.lang.Override
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double longitude = 2;</code>
       */
      @java.lang.Override
      public double getLongitude() {
        return longitude_;
      }
      /**
       * <code>required double longitude = 2;</code>
       */
      private void setLongitude(double value) {
        bitField0_ |= 0x00000002;
        longitude_ = value;
      }
      /**
       * <code>required double longitude = 2;</code>
       */
      private void clearLongitude() {
        bitField0_ = (bitField0_ & ~0x00000002);
        longitude_ = 0D;
      }

      public static final int BASISOFRECORD_FIELD_NUMBER = 3;
      private int basisOfRecord_;
      /**
       * <code>required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;</code>
       */
      @java.lang.Override
      public boolean hasBasisOfRecord() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;</code>
       */
      @java.lang.Override
      public org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord getBasisOfRecord() {
        org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord result = org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord.forNumber(basisOfRecord_);
        return result == null ? org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord.UNKNOWN : result;
      }
      /**
       * <code>required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;</code>
       */
      private void setBasisOfRecord(org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        basisOfRecord_ = value.getNumber();
      }
      /**
       * <code>required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;</code>
       */
      private void clearBasisOfRecord() {
        bitField0_ = (bitField0_ & ~0x00000004);
        basisOfRecord_ = 0;
      }

      public static final int YEAR_FIELD_NUMBER = 4;
      private int year_;
      /**
       * <code>optional uint32 year = 4 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasYear() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 year = 4 [default = 0];</code>
       */
      @java.lang.Override
      public int getYear() {
        return year_;
      }
      /**
       * <code>optional uint32 year = 4 [default = 0];</code>
       */
      private void setYear(int value) {
        bitField0_ |= 0x00000008;
        year_ = value;
      }
      /**
       * <code>optional uint32 year = 4 [default = 0];</code>
       */
      private void clearYear() {
        bitField0_ = (bitField0_ & ~0x00000008);
        year_ = 0;
      }

      public static final int COUNT_FIELD_NUMBER = 5;
      private int count_;
      /**
       * <code>optional uint32 count = 5 [default = 1];</code>
       */
      @java.lang.Override
      public boolean hasCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 count = 5 [default = 1];</code>
       */
      @java.lang.Override
      public int getCount() {
        return count_;
      }
      /**
       * <code>optional uint32 count = 5 [default = 1];</code>
       */
      private void setCount(int value) {
        bitField0_ |= 0x00000010;
        count_ = value;
      }
      /**
       * <code>optional uint32 count = 5 [default = 1];</code>
       */
      private void clearCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        count_ = 1;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeDouble(1, latitude_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeDouble(2, longitude_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeEnum(3, basisOfRecord_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, year_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, count_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, latitude_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, longitude_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, basisOfRecord_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, year_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, count_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(org.gbif.maps.io.PointFeature.PointFeatures.Feature prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * Protobuf type {@code org.gbif.maps.io.PointFeatures.Feature}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.gbif.maps.io.PointFeature.PointFeatures.Feature, Builder> implements
          // @@protoc_insertion_point(builder_implements:org.gbif.maps.io.PointFeatures.Feature)
          org.gbif.maps.io.PointFeature.PointFeatures.FeatureOrBuilder {
        // Construct using org.gbif.maps.io.PointFeature.PointFeatures.Feature.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>required double latitude = 1;</code>
         */
        @java.lang.Override
        public boolean hasLatitude() {
          return instance.hasLatitude();
        }
        /**
         * <code>required double latitude = 1;</code>
         */
        @java.lang.Override
        public double getLatitude() {
          return instance.getLatitude();
        }
        /**
         * <code>required double latitude = 1;</code>
         */
        public Builder setLatitude(double value) {
          copyOnWrite();
          instance.setLatitude(value);
          return this;
        }
        /**
         * <code>required double latitude = 1;</code>
         */
        public Builder clearLatitude() {
          copyOnWrite();
          instance.clearLatitude();
          return this;
        }

        /**
         * <code>required double longitude = 2;</code>
         */
        @java.lang.Override
        public boolean hasLongitude() {
          return instance.hasLongitude();
        }
        /**
         * <code>required double longitude = 2;</code>
         */
        @java.lang.Override
        public double getLongitude() {
          return instance.getLongitude();
        }
        /**
         * <code>required double longitude = 2;</code>
         */
        public Builder setLongitude(double value) {
          copyOnWrite();
          instance.setLongitude(value);
          return this;
        }
        /**
         * <code>required double longitude = 2;</code>
         */
        public Builder clearLongitude() {
          copyOnWrite();
          instance.clearLongitude();
          return this;
        }

        /**
         * <code>required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;</code>
         */
        @java.lang.Override
        public boolean hasBasisOfRecord() {
          return instance.hasBasisOfRecord();
        }
        /**
         * <code>required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;</code>
         */
        @java.lang.Override
        public org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord getBasisOfRecord() {
          return instance.getBasisOfRecord();
        }
        /**
         * <code>required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;</code>
         */
        public Builder setBasisOfRecord(org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord value) {
          copyOnWrite();
          instance.setBasisOfRecord(value);
          return this;
        }
        /**
         * <code>required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;</code>
         */
        public Builder clearBasisOfRecord() {
          copyOnWrite();
          instance.clearBasisOfRecord();
          return this;
        }

        /**
         * <code>optional uint32 year = 4 [default = 0];</code>
         */
        @java.lang.Override
        public boolean hasYear() {
          return instance.hasYear();
        }
        /**
         * <code>optional uint32 year = 4 [default = 0];</code>
         */
        @java.lang.Override
        public int getYear() {
          return instance.getYear();
        }
        /**
         * <code>optional uint32 year = 4 [default = 0];</code>
         */
        public Builder setYear(int value) {
          copyOnWrite();
          instance.setYear(value);
          return this;
        }
        /**
         * <code>optional uint32 year = 4 [default = 0];</code>
         */
        public Builder clearYear() {
          copyOnWrite();
          instance.clearYear();
          return this;
        }

        /**
         * <code>optional uint32 count = 5 [default = 1];</code>
         */
        @java.lang.Override
        public boolean hasCount() {
          return instance.hasCount();
        }
        /**
         * <code>optional uint32 count = 5 [default = 1];</code>
         */
        @java.lang.Override
        public int getCount() {
          return instance.getCount();
        }
        /**
         * <code>optional uint32 count = 5 [default = 1];</code>
         */
        public Builder setCount(int value) {
          copyOnWrite();
          instance.setCount(value);
          return this;
        }
        /**
         * <code>optional uint32 count = 5 [default = 1];</code>
         */
        public Builder clearCount() {
          copyOnWrite();
          instance.clearCount();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:org.gbif.maps.io.PointFeatures.Feature)
      }
      private byte memoizedIsInitialized = 2;
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.gbif.maps.io.PointFeature.PointFeatures.Feature();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case IS_INITIALIZED: {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return DEFAULT_INSTANCE;
            if (isInitialized == 0) return null;

            boolean shouldMemoize = ((Boolean) arg0).booleanValue();
            if (!hasLatitude()) {
              return null;
            }
            if (!hasLongitude()) {
              return null;
            }
            if (!hasBasisOfRecord()) {
              return null;
            }
            return DEFAULT_INSTANCE;

          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            org.gbif.maps.io.PointFeature.PointFeatures.Feature other = (org.gbif.maps.io.PointFeature.PointFeatures.Feature) arg1;
            latitude_ = visitor.visitDouble(
                hasLatitude(), latitude_,
                other.hasLatitude(), other.latitude_);
            longitude_ = visitor.visitDouble(
                hasLongitude(), longitude_,
                other.hasLongitude(), other.longitude_);
            basisOfRecord_ = visitor.visitInt(hasBasisOfRecord(), basisOfRecord_,
                other.hasBasisOfRecord(), other.basisOfRecord_);
            year_ = visitor.visitInt(
                hasYear(), year_,
                other.hasYear(), other.year_);
            count_ = visitor.visitInt(
                hasCount(), count_,
                other.hasCount(), other.count_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 9: {
                    bitField0_ |= 0x00000001;
                    latitude_ = input.readDouble();
                    break;
                  }
                  case 17: {
                    bitField0_ |= 0x00000002;
                    longitude_ = input.readDouble();
                    break;
                  }
                  case 24: {
                    int rawValue = input.readEnum();
                    org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord value = org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord.forNumber(rawValue);
                    if (value == null) {
                      super.mergeVarintField(3, rawValue);
                    } else {
                      bitField0_ |= 0x00000004;
                      basisOfRecord_ = rawValue;
                    }
                    break;
                  }
                  case 32: {
                    bitField0_ |= 0x00000008;
                    year_ = input.readUInt32();
                    break;
                  }
                  case 40: {
                    bitField0_ |= 0x00000010;
                    count_ = input.readUInt32();
                    break;
                  }
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<org.gbif.maps.io.PointFeature.PointFeatures.Feature> parser = PARSER;
            if (parser == null) {
              synchronized (org.gbif.maps.io.PointFeature.PointFeatures.Feature.class) {
                parser = PARSER;
                if (parser == null) {
                  parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return memoizedIsInitialized;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:org.gbif.maps.io.PointFeatures.Feature)
      private static final org.gbif.maps.io.PointFeature.PointFeatures.Feature DEFAULT_INSTANCE;
      static {
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = new Feature();
      }

      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Feature> PARSER;

      public static com.google.protobuf.Parser<Feature> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public static final int FEATURES_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<org.gbif.maps.io.PointFeature.PointFeatures.Feature> features_;
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.gbif.maps.io.PointFeature.PointFeatures.Feature> getFeaturesList() {
      return features_;
    }
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    public java.util.List<? extends org.gbif.maps.io.PointFeature.PointFeatures.FeatureOrBuilder> 
        getFeaturesOrBuilderList() {
      return features_;
    }
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    @java.lang.Override
    public int getFeaturesCount() {
      return features_.size();
    }
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    @java.lang.Override
    public org.gbif.maps.io.PointFeature.PointFeatures.Feature getFeatures(int index) {
      return features_.get(index);
    }
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    public org.gbif.maps.io.PointFeature.PointFeatures.FeatureOrBuilder getFeaturesOrBuilder(
        int index) {
      return features_.get(index);
    }
    private void ensureFeaturesIsMutable() {
      if (!features_.isModifiable()) {
        features_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(features_);
       }
    }

    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    private void setFeatures(
        int index, org.gbif.maps.io.PointFeature.PointFeatures.Feature value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFeaturesIsMutable();
      features_.set(index, value);
    }
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    private void setFeatures(
        int index, org.gbif.maps.io.PointFeature.PointFeatures.Feature.Builder builderForValue) {
      ensureFeaturesIsMutable();
      features_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    private void addFeatures(org.gbif.maps.io.PointFeature.PointFeatures.Feature value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFeaturesIsMutable();
      features_.add(value);
    }
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    private void addFeatures(
        int index, org.gbif.maps.io.PointFeature.PointFeatures.Feature value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFeaturesIsMutable();
      features_.add(index, value);
    }
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    private void addFeatures(
        org.gbif.maps.io.PointFeature.PointFeatures.Feature.Builder builderForValue) {
      ensureFeaturesIsMutable();
      features_.add(builderForValue.build());
    }
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    private void addFeatures(
        int index, org.gbif.maps.io.PointFeature.PointFeatures.Feature.Builder builderForValue) {
      ensureFeaturesIsMutable();
      features_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    private void addAllFeatures(
        java.lang.Iterable<? extends org.gbif.maps.io.PointFeature.PointFeatures.Feature> values) {
      ensureFeaturesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, features_);
    }
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    private void clearFeatures() {
      features_ = emptyProtobufList();
    }
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    private void removeFeatures(int index) {
      ensureFeaturesIsMutable();
      features_.remove(index);
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < features_.size(); i++) {
        output.writeMessage(1, features_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < features_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, features_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.gbif.maps.io.PointFeature.PointFeatures parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.gbif.maps.io.PointFeature.PointFeatures prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     **
     * A basic point feature that holds a latitude, longitude, basisOfRecord, year and the count.
     * </pre>
     *
     * Protobuf type {@code org.gbif.maps.io.PointFeatures}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.gbif.maps.io.PointFeature.PointFeatures, Builder> implements
        // @@protoc_insertion_point(builder_implements:org.gbif.maps.io.PointFeatures)
        org.gbif.maps.io.PointFeature.PointFeaturesOrBuilder {
      // Construct using org.gbif.maps.io.PointFeature.PointFeatures.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      @java.lang.Override
      public java.util.List<org.gbif.maps.io.PointFeature.PointFeatures.Feature> getFeaturesList() {
        return java.util.Collections.unmodifiableList(
            instance.getFeaturesList());
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      @java.lang.Override
      public int getFeaturesCount() {
        return instance.getFeaturesCount();
      }/**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      @java.lang.Override
      public org.gbif.maps.io.PointFeature.PointFeatures.Feature getFeatures(int index) {
        return instance.getFeatures(index);
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public Builder setFeatures(
          int index, org.gbif.maps.io.PointFeature.PointFeatures.Feature value) {
        copyOnWrite();
        instance.setFeatures(index, value);
        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public Builder setFeatures(
          int index, org.gbif.maps.io.PointFeature.PointFeatures.Feature.Builder builderForValue) {
        copyOnWrite();
        instance.setFeatures(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public Builder addFeatures(org.gbif.maps.io.PointFeature.PointFeatures.Feature value) {
        copyOnWrite();
        instance.addFeatures(value);
        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public Builder addFeatures(
          int index, org.gbif.maps.io.PointFeature.PointFeatures.Feature value) {
        copyOnWrite();
        instance.addFeatures(index, value);
        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public Builder addFeatures(
          org.gbif.maps.io.PointFeature.PointFeatures.Feature.Builder builderForValue) {
        copyOnWrite();
        instance.addFeatures(builderForValue);
        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public Builder addFeatures(
          int index, org.gbif.maps.io.PointFeature.PointFeatures.Feature.Builder builderForValue) {
        copyOnWrite();
        instance.addFeatures(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public Builder addAllFeatures(
          java.lang.Iterable<? extends org.gbif.maps.io.PointFeature.PointFeatures.Feature> values) {
        copyOnWrite();
        instance.addAllFeatures(values);
        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public Builder clearFeatures() {
        copyOnWrite();
        instance.clearFeatures();
        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public Builder removeFeatures(int index) {
        copyOnWrite();
        instance.removeFeatures(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.gbif.maps.io.PointFeatures)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.gbif.maps.io.PointFeature.PointFeatures();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getFeaturesCount(); i++) {
            if (!getFeatures(i).isInitialized()) {
              return null;
            }
          }
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          features_.makeImmutable();
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.gbif.maps.io.PointFeature.PointFeatures other = (org.gbif.maps.io.PointFeature.PointFeatures) arg1;
          features_= visitor.visitList(features_, other.features_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  if (!features_.isModifiable()) {
                    features_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(features_);
                  }
                  features_.add(
                      input.readMessage(org.gbif.maps.io.PointFeature.PointFeatures.Feature.parser(), extensionRegistry));
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.gbif.maps.io.PointFeature.PointFeatures> parser = PARSER;
          if (parser == null) {
            synchronized (org.gbif.maps.io.PointFeature.PointFeatures.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:org.gbif.maps.io.PointFeatures)
    private static final org.gbif.maps.io.PointFeature.PointFeatures DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new PointFeatures();
    }

    public static org.gbif.maps.io.PointFeature.PointFeatures getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PointFeatures> PARSER;

    public static com.google.protobuf.Parser<PointFeatures> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
