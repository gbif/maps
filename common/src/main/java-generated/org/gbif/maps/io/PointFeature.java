// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: point_feature.proto

package org.gbif.maps.io;

public final class PointFeature {
  private PointFeature() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface PointFeaturesOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    java.util.List<org.gbif.maps.io.PointFeature.PointFeatures.Feature> 
        getFeaturesList();
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    org.gbif.maps.io.PointFeature.PointFeatures.Feature getFeatures(int index);
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    int getFeaturesCount();
  }
  /**
   * Protobuf type {@code org.gbif.maps.io.PointFeatures}
   *
   * <pre>
   **
   * A basic point feature that holds a latitude, longitude, basisOfRecord, year and the count.
   * </pre>
   */
  public static final class PointFeatures extends
      com.google.protobuf.GeneratedMessageLite
      implements PointFeaturesOrBuilder {
    // Use PointFeatures.newBuilder() to construct.
    private PointFeatures(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private PointFeatures(boolean noInit) {}

    private static final PointFeatures defaultInstance;
    public static PointFeatures getDefaultInstance() {
      return defaultInstance;
    }

    public PointFeatures getDefaultInstanceForType() {
      return defaultInstance;
    }

    private PointFeatures(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                features_ = new java.util.ArrayList<org.gbif.maps.io.PointFeature.PointFeatures.Feature>();
                mutable_bitField0_ |= 0x00000001;
              }
              features_.add(input.readMessage(org.gbif.maps.io.PointFeature.PointFeatures.Feature.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          features_ = java.util.Collections.unmodifiableList(features_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<PointFeatures> PARSER =
        new com.google.protobuf.AbstractParser<PointFeatures>() {
      public PointFeatures parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PointFeatures(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PointFeatures> getParserForType() {
      return PARSER;
    }

    public interface FeatureOrBuilder
        extends com.google.protobuf.MessageLiteOrBuilder {

      // required double latitude = 1;
      /**
       * <code>required double latitude = 1;</code>
       */
      boolean hasLatitude();
      /**
       * <code>required double latitude = 1;</code>
       */
      double getLatitude();

      // required double longitude = 2;
      /**
       * <code>required double longitude = 2;</code>
       */
      boolean hasLongitude();
      /**
       * <code>required double longitude = 2;</code>
       */
      double getLongitude();

      // required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;
      /**
       * <code>required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;</code>
       */
      boolean hasBasisOfRecord();
      /**
       * <code>required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;</code>
       */
      org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord getBasisOfRecord();

      // optional uint32 year = 4 [default = 0];
      /**
       * <code>optional uint32 year = 4 [default = 0];</code>
       */
      boolean hasYear();
      /**
       * <code>optional uint32 year = 4 [default = 0];</code>
       */
      int getYear();

      // optional uint32 count = 5 [default = 1];
      /**
       * <code>optional uint32 count = 5 [default = 1];</code>
       */
      boolean hasCount();
      /**
       * <code>optional uint32 count = 5 [default = 1];</code>
       */
      int getCount();
    }
    /**
     * Protobuf type {@code org.gbif.maps.io.PointFeatures.Feature}
     */
    public static final class Feature extends
        com.google.protobuf.GeneratedMessageLite
        implements FeatureOrBuilder {
      // Use Feature.newBuilder() to construct.
      private Feature(com.google.protobuf.GeneratedMessageLite.Builder builder) {
        super(builder);

      }
      private Feature(boolean noInit) {}

      private static final Feature defaultInstance;
      public static Feature getDefaultInstance() {
        return defaultInstance;
      }

      public Feature getDefaultInstanceForType() {
        return defaultInstance;
      }

      private Feature(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 9: {
                bitField0_ |= 0x00000001;
                latitude_ = input.readDouble();
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                longitude_ = input.readDouble();
                break;
              }
              case 24: {
                int rawValue = input.readEnum();
                org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord value = org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord.valueOf(rawValue);
                if (value != null) {
                  bitField0_ |= 0x00000004;
                  basisOfRecord_ = value;
                }
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                year_ = input.readUInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                count_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static com.google.protobuf.Parser<Feature> PARSER =
          new com.google.protobuf.AbstractParser<Feature>() {
        public Feature parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Feature(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Feature> getParserForType() {
        return PARSER;
      }

      /**
       * Protobuf enum {@code org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord}
       *
       * <pre>
       * this should hold the same values that the GBIF API support for consistency
       * </pre>
       */
      public enum BasisOfRecord
          implements com.google.protobuf.Internal.EnumLite {
        /**
         * <code>UNKNOWN = 0;</code>
         *
         * <pre>
         * Deprecated
         * </pre>
         */
        UNKNOWN(0, 0),
        /**
         * <code>PRESERVED_SPECIMEN = 1;</code>
         */
        PRESERVED_SPECIMEN(1, 1),
        /**
         * <code>FOSSIL_SPECIMEN = 2;</code>
         */
        FOSSIL_SPECIMEN(2, 2),
        /**
         * <code>LIVING_SPECIMEN = 3;</code>
         */
        LIVING_SPECIMEN(3, 3),
        /**
         * <code>OBSERVATION = 4;</code>
         */
        OBSERVATION(4, 4),
        /**
         * <code>HUMAN_OBSERVATION = 5;</code>
         */
        HUMAN_OBSERVATION(5, 5),
        /**
         * <code>MACHINE_OBSERVATION = 6;</code>
         */
        MACHINE_OBSERVATION(6, 6),
        /**
         * <code>MATERIAL_SAMPLE = 7;</code>
         */
        MATERIAL_SAMPLE(7, 7),
        /**
         * <code>LITERATURE = 8;</code>
         *
         * <pre>
         * Deprecated
         * </pre>
         */
        LITERATURE(8, 8),
        /**
         * <code>OCCURRENCE = 9;</code>
         */
        OCCURRENCE(9, 9),
        /**
         * <code>MATERIAL_CITATION = 10;</code>
         */
        MATERIAL_CITATION(10, 10),
        ;

        /**
         * <code>UNKNOWN = 0;</code>
         *
         * <pre>
         * Deprecated
         * </pre>
         */
        public static final int UNKNOWN_VALUE = 0;
        /**
         * <code>PRESERVED_SPECIMEN = 1;</code>
         */
        public static final int PRESERVED_SPECIMEN_VALUE = 1;
        /**
         * <code>FOSSIL_SPECIMEN = 2;</code>
         */
        public static final int FOSSIL_SPECIMEN_VALUE = 2;
        /**
         * <code>LIVING_SPECIMEN = 3;</code>
         */
        public static final int LIVING_SPECIMEN_VALUE = 3;
        /**
         * <code>OBSERVATION = 4;</code>
         */
        public static final int OBSERVATION_VALUE = 4;
        /**
         * <code>HUMAN_OBSERVATION = 5;</code>
         */
        public static final int HUMAN_OBSERVATION_VALUE = 5;
        /**
         * <code>MACHINE_OBSERVATION = 6;</code>
         */
        public static final int MACHINE_OBSERVATION_VALUE = 6;
        /**
         * <code>MATERIAL_SAMPLE = 7;</code>
         */
        public static final int MATERIAL_SAMPLE_VALUE = 7;
        /**
         * <code>LITERATURE = 8;</code>
         *
         * <pre>
         * Deprecated
         * </pre>
         */
        public static final int LITERATURE_VALUE = 8;
        /**
         * <code>OCCURRENCE = 9;</code>
         */
        public static final int OCCURRENCE_VALUE = 9;
        /**
         * <code>MATERIAL_CITATION = 10;</code>
         */
        public static final int MATERIAL_CITATION_VALUE = 10;


        public final int getNumber() { return value; }

        public static BasisOfRecord valueOf(int value) {
          switch (value) {
            case 0: return UNKNOWN;
            case 1: return PRESERVED_SPECIMEN;
            case 2: return FOSSIL_SPECIMEN;
            case 3: return LIVING_SPECIMEN;
            case 4: return OBSERVATION;
            case 5: return HUMAN_OBSERVATION;
            case 6: return MACHINE_OBSERVATION;
            case 7: return MATERIAL_SAMPLE;
            case 8: return LITERATURE;
            case 9: return OCCURRENCE;
            case 10: return MATERIAL_CITATION;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<BasisOfRecord>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<BasisOfRecord>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<BasisOfRecord>() {
                public BasisOfRecord findValueByNumber(int number) {
                  return BasisOfRecord.valueOf(number);
                }
              };

        private final int value;

        private BasisOfRecord(int index, int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord)
      }

      private int bitField0_;
      // required double latitude = 1;
      public static final int LATITUDE_FIELD_NUMBER = 1;
      private double latitude_;
      /**
       * <code>required double latitude = 1;</code>
       */
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double latitude = 1;</code>
       */
      public double getLatitude() {
        return latitude_;
      }

      // required double longitude = 2;
      public static final int LONGITUDE_FIELD_NUMBER = 2;
      private double longitude_;
      /**
       * <code>required double longitude = 2;</code>
       */
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double longitude = 2;</code>
       */
      public double getLongitude() {
        return longitude_;
      }

      // required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;
      public static final int BASISOFRECORD_FIELD_NUMBER = 3;
      private org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord basisOfRecord_;
      /**
       * <code>required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;</code>
       */
      public boolean hasBasisOfRecord() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;</code>
       */
      public org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord getBasisOfRecord() {
        return basisOfRecord_;
      }

      // optional uint32 year = 4 [default = 0];
      public static final int YEAR_FIELD_NUMBER = 4;
      private int year_;
      /**
       * <code>optional uint32 year = 4 [default = 0];</code>
       */
      public boolean hasYear() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 year = 4 [default = 0];</code>
       */
      public int getYear() {
        return year_;
      }

      // optional uint32 count = 5 [default = 1];
      public static final int COUNT_FIELD_NUMBER = 5;
      private int count_;
      /**
       * <code>optional uint32 count = 5 [default = 1];</code>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 count = 5 [default = 1];</code>
       */
      public int getCount() {
        return count_;
      }

      private void initFields() {
        latitude_ = 0D;
        longitude_ = 0D;
        basisOfRecord_ = org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord.UNKNOWN;
        year_ = 0;
        count_ = 1;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasLatitude()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasLongitude()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBasisOfRecord()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeDouble(1, latitude_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeDouble(2, longitude_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeEnum(3, basisOfRecord_.getNumber());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, year_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, count_);
        }
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, latitude_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, longitude_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, basisOfRecord_.getNumber());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, year_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, count_);
        }
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.gbif.maps.io.PointFeature.PointFeatures.Feature parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.gbif.maps.io.PointFeature.PointFeatures.Feature prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      /**
       * Protobuf type {@code org.gbif.maps.io.PointFeatures.Feature}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.gbif.maps.io.PointFeature.PointFeatures.Feature, Builder>
          implements org.gbif.maps.io.PointFeature.PointFeatures.FeatureOrBuilder {
        // Construct using org.gbif.maps.io.PointFeature.PointFeatures.Feature.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          latitude_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000001);
          longitude_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000002);
          basisOfRecord_ = org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord.UNKNOWN;
          bitField0_ = (bitField0_ & ~0x00000004);
          year_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          count_ = 1;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public org.gbif.maps.io.PointFeature.PointFeatures.Feature getDefaultInstanceForType() {
          return org.gbif.maps.io.PointFeature.PointFeatures.Feature.getDefaultInstance();
        }

        public org.gbif.maps.io.PointFeature.PointFeatures.Feature build() {
          org.gbif.maps.io.PointFeature.PointFeatures.Feature result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.gbif.maps.io.PointFeature.PointFeatures.Feature buildPartial() {
          org.gbif.maps.io.PointFeature.PointFeatures.Feature result = new org.gbif.maps.io.PointFeature.PointFeatures.Feature(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.latitude_ = latitude_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.longitude_ = longitude_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.basisOfRecord_ = basisOfRecord_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.year_ = year_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.count_ = count_;
          result.bitField0_ = to_bitField0_;
          return result;
        }

        public Builder mergeFrom(org.gbif.maps.io.PointFeature.PointFeatures.Feature other) {
          if (other == org.gbif.maps.io.PointFeature.PointFeatures.Feature.getDefaultInstance()) return this;
          if (other.hasLatitude()) {
            setLatitude(other.getLatitude());
          }
          if (other.hasLongitude()) {
            setLongitude(other.getLongitude());
          }
          if (other.hasBasisOfRecord()) {
            setBasisOfRecord(other.getBasisOfRecord());
          }
          if (other.hasYear()) {
            setYear(other.getYear());
          }
          if (other.hasCount()) {
            setCount(other.getCount());
          }
          return this;
        }

        public final boolean isInitialized() {
          if (!hasLatitude()) {
            
            return false;
          }
          if (!hasLongitude()) {
            
            return false;
          }
          if (!hasBasisOfRecord()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.gbif.maps.io.PointFeature.PointFeatures.Feature parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.gbif.maps.io.PointFeature.PointFeatures.Feature) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required double latitude = 1;
        private double latitude_ ;
        /**
         * <code>required double latitude = 1;</code>
         */
        public boolean hasLatitude() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required double latitude = 1;</code>
         */
        public double getLatitude() {
          return latitude_;
        }
        /**
         * <code>required double latitude = 1;</code>
         */
        public Builder setLatitude(double value) {
          bitField0_ |= 0x00000001;
          latitude_ = value;
          
          return this;
        }
        /**
         * <code>required double latitude = 1;</code>
         */
        public Builder clearLatitude() {
          bitField0_ = (bitField0_ & ~0x00000001);
          latitude_ = 0D;
          
          return this;
        }

        // required double longitude = 2;
        private double longitude_ ;
        /**
         * <code>required double longitude = 2;</code>
         */
        public boolean hasLongitude() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required double longitude = 2;</code>
         */
        public double getLongitude() {
          return longitude_;
        }
        /**
         * <code>required double longitude = 2;</code>
         */
        public Builder setLongitude(double value) {
          bitField0_ |= 0x00000002;
          longitude_ = value;
          
          return this;
        }
        /**
         * <code>required double longitude = 2;</code>
         */
        public Builder clearLongitude() {
          bitField0_ = (bitField0_ & ~0x00000002);
          longitude_ = 0D;
          
          return this;
        }

        // required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;
        private org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord basisOfRecord_ = org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord.UNKNOWN;
        /**
         * <code>required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;</code>
         */
        public boolean hasBasisOfRecord() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;</code>
         */
        public org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord getBasisOfRecord() {
          return basisOfRecord_;
        }
        /**
         * <code>required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;</code>
         */
        public Builder setBasisOfRecord(org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000004;
          basisOfRecord_ = value;
          
          return this;
        }
        /**
         * <code>required .org.gbif.maps.io.PointFeatures.Feature.BasisOfRecord basisOfRecord = 3;</code>
         */
        public Builder clearBasisOfRecord() {
          bitField0_ = (bitField0_ & ~0x00000004);
          basisOfRecord_ = org.gbif.maps.io.PointFeature.PointFeatures.Feature.BasisOfRecord.UNKNOWN;
          
          return this;
        }

        // optional uint32 year = 4 [default = 0];
        private int year_ ;
        /**
         * <code>optional uint32 year = 4 [default = 0];</code>
         */
        public boolean hasYear() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 year = 4 [default = 0];</code>
         */
        public int getYear() {
          return year_;
        }
        /**
         * <code>optional uint32 year = 4 [default = 0];</code>
         */
        public Builder setYear(int value) {
          bitField0_ |= 0x00000008;
          year_ = value;
          
          return this;
        }
        /**
         * <code>optional uint32 year = 4 [default = 0];</code>
         */
        public Builder clearYear() {
          bitField0_ = (bitField0_ & ~0x00000008);
          year_ = 0;
          
          return this;
        }

        // optional uint32 count = 5 [default = 1];
        private int count_ = 1;
        /**
         * <code>optional uint32 count = 5 [default = 1];</code>
         */
        public boolean hasCount() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 count = 5 [default = 1];</code>
         */
        public int getCount() {
          return count_;
        }
        /**
         * <code>optional uint32 count = 5 [default = 1];</code>
         */
        public Builder setCount(int value) {
          bitField0_ |= 0x00000010;
          count_ = value;
          
          return this;
        }
        /**
         * <code>optional uint32 count = 5 [default = 1];</code>
         */
        public Builder clearCount() {
          bitField0_ = (bitField0_ & ~0x00000010);
          count_ = 1;
          
          return this;
        }

        // @@protoc_insertion_point(builder_scope:org.gbif.maps.io.PointFeatures.Feature)
      }

      static {
        defaultInstance = new Feature(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:org.gbif.maps.io.PointFeatures.Feature)
    }

    // repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;
    public static final int FEATURES_FIELD_NUMBER = 1;
    private java.util.List<org.gbif.maps.io.PointFeature.PointFeatures.Feature> features_;
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    public java.util.List<org.gbif.maps.io.PointFeature.PointFeatures.Feature> getFeaturesList() {
      return features_;
    }
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    public java.util.List<? extends org.gbif.maps.io.PointFeature.PointFeatures.FeatureOrBuilder> 
        getFeaturesOrBuilderList() {
      return features_;
    }
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    public int getFeaturesCount() {
      return features_.size();
    }
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    public org.gbif.maps.io.PointFeature.PointFeatures.Feature getFeatures(int index) {
      return features_.get(index);
    }
    /**
     * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
     */
    public org.gbif.maps.io.PointFeature.PointFeatures.FeatureOrBuilder getFeaturesOrBuilder(
        int index) {
      return features_.get(index);
    }

    private void initFields() {
      features_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getFeaturesCount(); i++) {
        if (!getFeatures(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < features_.size(); i++) {
        output.writeMessage(1, features_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < features_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, features_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.gbif.maps.io.PointFeature.PointFeatures parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.gbif.maps.io.PointFeature.PointFeatures parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.gbif.maps.io.PointFeature.PointFeatures prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code org.gbif.maps.io.PointFeatures}
     *
     * <pre>
     **
     * A basic point feature that holds a latitude, longitude, basisOfRecord, year and the count.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.gbif.maps.io.PointFeature.PointFeatures, Builder>
        implements org.gbif.maps.io.PointFeature.PointFeaturesOrBuilder {
      // Construct using org.gbif.maps.io.PointFeature.PointFeatures.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        features_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.gbif.maps.io.PointFeature.PointFeatures getDefaultInstanceForType() {
        return org.gbif.maps.io.PointFeature.PointFeatures.getDefaultInstance();
      }

      public org.gbif.maps.io.PointFeature.PointFeatures build() {
        org.gbif.maps.io.PointFeature.PointFeatures result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.gbif.maps.io.PointFeature.PointFeatures buildPartial() {
        org.gbif.maps.io.PointFeature.PointFeatures result = new org.gbif.maps.io.PointFeature.PointFeatures(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          features_ = java.util.Collections.unmodifiableList(features_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.features_ = features_;
        return result;
      }

      public Builder mergeFrom(org.gbif.maps.io.PointFeature.PointFeatures other) {
        if (other == org.gbif.maps.io.PointFeature.PointFeatures.getDefaultInstance()) return this;
        if (!other.features_.isEmpty()) {
          if (features_.isEmpty()) {
            features_ = other.features_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFeaturesIsMutable();
            features_.addAll(other.features_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFeaturesCount(); i++) {
          if (!getFeatures(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.gbif.maps.io.PointFeature.PointFeatures parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.gbif.maps.io.PointFeature.PointFeatures) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;
      private java.util.List<org.gbif.maps.io.PointFeature.PointFeatures.Feature> features_ =
        java.util.Collections.emptyList();
      private void ensureFeaturesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          features_ = new java.util.ArrayList<org.gbif.maps.io.PointFeature.PointFeatures.Feature>(features_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public java.util.List<org.gbif.maps.io.PointFeature.PointFeatures.Feature> getFeaturesList() {
        return java.util.Collections.unmodifiableList(features_);
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public int getFeaturesCount() {
        return features_.size();
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public org.gbif.maps.io.PointFeature.PointFeatures.Feature getFeatures(int index) {
        return features_.get(index);
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public Builder setFeatures(
          int index, org.gbif.maps.io.PointFeature.PointFeatures.Feature value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeaturesIsMutable();
        features_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public Builder setFeatures(
          int index, org.gbif.maps.io.PointFeature.PointFeatures.Feature.Builder builderForValue) {
        ensureFeaturesIsMutable();
        features_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public Builder addFeatures(org.gbif.maps.io.PointFeature.PointFeatures.Feature value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeaturesIsMutable();
        features_.add(value);

        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public Builder addFeatures(
          int index, org.gbif.maps.io.PointFeature.PointFeatures.Feature value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeaturesIsMutable();
        features_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public Builder addFeatures(
          org.gbif.maps.io.PointFeature.PointFeatures.Feature.Builder builderForValue) {
        ensureFeaturesIsMutable();
        features_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public Builder addFeatures(
          int index, org.gbif.maps.io.PointFeature.PointFeatures.Feature.Builder builderForValue) {
        ensureFeaturesIsMutable();
        features_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public Builder addAllFeatures(
          java.lang.Iterable<? extends org.gbif.maps.io.PointFeature.PointFeatures.Feature> values) {
        ensureFeaturesIsMutable();
        super.addAll(values, features_);

        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public Builder clearFeatures() {
        features_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.PointFeatures.Feature features = 1;</code>
       */
      public Builder removeFeatures(int index) {
        ensureFeaturesIsMutable();
        features_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.gbif.maps.io.PointFeatures)
    }

    static {
      defaultInstance = new PointFeatures(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.gbif.maps.io.PointFeatures)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
