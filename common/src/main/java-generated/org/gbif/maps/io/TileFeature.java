// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tile_feature.proto

package org.gbif.maps.io;

public final class TileFeature {
  private TileFeature() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface TileFeaturesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.gbif.maps.io.TileFeatures)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
     */
    java.util.List<org.gbif.maps.io.TileFeature.TileFeatures.Layer> 
        getLayersList();
    /**
     * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
     */
    org.gbif.maps.io.TileFeature.TileFeatures.Layer getLayers(int index);
    /**
     * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
     */
    int getLayersCount();
  }
  /**
   * <pre>
   **
   * An optimized encoding for tile data.
   * </pre>
   *
   * Protobuf type {@code org.gbif.maps.io.TileFeatures}
   */
  public  static final class TileFeatures extends
      com.google.protobuf.GeneratedMessageLite<
          TileFeatures, TileFeatures.Builder> implements
      // @@protoc_insertion_point(message_implements:org.gbif.maps.io.TileFeatures)
      TileFeaturesOrBuilder {
    private TileFeatures() {
      layers_ = emptyProtobufList();
    }
    public interface LayerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.gbif.maps.io.TileFeatures.Layer)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>required .org.gbif.maps.io.TileFeatures.Layer.BasisOfRecord basisOfRecord = 1;</code>
       */
      boolean hasBasisOfRecord();
      /**
       * <code>required .org.gbif.maps.io.TileFeatures.Layer.BasisOfRecord basisOfRecord = 1;</code>
       */
      org.gbif.maps.io.TileFeature.TileFeatures.Layer.BasisOfRecord getBasisOfRecord();

      /**
       * <code>repeated int32 x = 2 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getXList();
      /**
       * <code>repeated int32 x = 2 [packed = true];</code>
       */
      int getXCount();
      /**
       * <code>repeated int32 x = 2 [packed = true];</code>
       */
      int getX(int index);

      /**
       * <code>repeated int32 y = 3 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getYList();
      /**
       * <code>repeated int32 y = 3 [packed = true];</code>
       */
      int getYCount();
      /**
       * <code>repeated int32 y = 3 [packed = true];</code>
       */
      int getY(int index);

      /**
       * <code>repeated int32 year = 4 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getYearList();
      /**
       * <code>repeated int32 year = 4 [packed = true];</code>
       */
      int getYearCount();
      /**
       * <code>repeated int32 year = 4 [packed = true];</code>
       */
      int getYear(int index);

      /**
       * <code>repeated int32 count = 5 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getCountList();
      /**
       * <code>repeated int32 count = 5 [packed = true];</code>
       */
      int getCountCount();
      /**
       * <code>repeated int32 count = 5 [packed = true];</code>
       */
      int getCount(int index);
    }
    /**
     * <pre>
     * a layer contains the basis of record and year data
     * </pre>
     *
     * Protobuf type {@code org.gbif.maps.io.TileFeatures.Layer}
     */
    public  static final class Layer extends
        com.google.protobuf.GeneratedMessageLite<
            Layer, Layer.Builder> implements
        // @@protoc_insertion_point(message_implements:org.gbif.maps.io.TileFeatures.Layer)
        LayerOrBuilder {
      private Layer() {
        x_ = emptyIntList();
        y_ = emptyIntList();
        year_ = emptyIntList();
        count_ = emptyIntList();
      }
      /**
       * <pre>
       * this should hold the same values that the GBIF API support for consistency
       * </pre>
       *
       * Protobuf enum {@code org.gbif.maps.io.TileFeatures.Layer.BasisOfRecord}
       */
      public enum BasisOfRecord
          implements com.google.protobuf.Internal.EnumLite {
        /**
         * <pre>
         * Deprecated
         * </pre>
         *
         * <code>UNKNOWN = 0;</code>
         */
        UNKNOWN(0),
        /**
         * <code>PRESERVED_SPECIMEN = 1;</code>
         */
        PRESERVED_SPECIMEN(1),
        /**
         * <code>FOSSIL_SPECIMEN = 2;</code>
         */
        FOSSIL_SPECIMEN(2),
        /**
         * <code>LIVING_SPECIMEN = 3;</code>
         */
        LIVING_SPECIMEN(3),
        /**
         * <code>OBSERVATION = 4;</code>
         */
        OBSERVATION(4),
        /**
         * <code>HUMAN_OBSERVATION = 5;</code>
         */
        HUMAN_OBSERVATION(5),
        /**
         * <code>MACHINE_OBSERVATION = 6;</code>
         */
        MACHINE_OBSERVATION(6),
        /**
         * <code>MATERIAL_SAMPLE = 7;</code>
         */
        MATERIAL_SAMPLE(7),
        /**
         * <pre>
         * Deprecated
         * </pre>
         *
         * <code>LITERATURE = 8;</code>
         */
        LITERATURE(8),
        /**
         * <code>OCCURRENCE = 9;</code>
         */
        OCCURRENCE(9),
        /**
         * <code>MATERIAL_CITATION = 10;</code>
         */
        MATERIAL_CITATION(10),
        ;

        /**
         * <pre>
         * Deprecated
         * </pre>
         *
         * <code>UNKNOWN = 0;</code>
         */
        public static final int UNKNOWN_VALUE = 0;
        /**
         * <code>PRESERVED_SPECIMEN = 1;</code>
         */
        public static final int PRESERVED_SPECIMEN_VALUE = 1;
        /**
         * <code>FOSSIL_SPECIMEN = 2;</code>
         */
        public static final int FOSSIL_SPECIMEN_VALUE = 2;
        /**
         * <code>LIVING_SPECIMEN = 3;</code>
         */
        public static final int LIVING_SPECIMEN_VALUE = 3;
        /**
         * <code>OBSERVATION = 4;</code>
         */
        public static final int OBSERVATION_VALUE = 4;
        /**
         * <code>HUMAN_OBSERVATION = 5;</code>
         */
        public static final int HUMAN_OBSERVATION_VALUE = 5;
        /**
         * <code>MACHINE_OBSERVATION = 6;</code>
         */
        public static final int MACHINE_OBSERVATION_VALUE = 6;
        /**
         * <code>MATERIAL_SAMPLE = 7;</code>
         */
        public static final int MATERIAL_SAMPLE_VALUE = 7;
        /**
         * <pre>
         * Deprecated
         * </pre>
         *
         * <code>LITERATURE = 8;</code>
         */
        public static final int LITERATURE_VALUE = 8;
        /**
         * <code>OCCURRENCE = 9;</code>
         */
        public static final int OCCURRENCE_VALUE = 9;
        /**
         * <code>MATERIAL_CITATION = 10;</code>
         */
        public static final int MATERIAL_CITATION_VALUE = 10;


        @java.lang.Override
        public final int getNumber() {
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static BasisOfRecord valueOf(int value) {
          return forNumber(value);
        }

        public static BasisOfRecord forNumber(int value) {
          switch (value) {
            case 0: return UNKNOWN;
            case 1: return PRESERVED_SPECIMEN;
            case 2: return FOSSIL_SPECIMEN;
            case 3: return LIVING_SPECIMEN;
            case 4: return OBSERVATION;
            case 5: return HUMAN_OBSERVATION;
            case 6: return MACHINE_OBSERVATION;
            case 7: return MATERIAL_SAMPLE;
            case 8: return LITERATURE;
            case 9: return OCCURRENCE;
            case 10: return MATERIAL_CITATION;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<BasisOfRecord>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            BasisOfRecord> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<BasisOfRecord>() {
                @java.lang.Override
                public BasisOfRecord findValueByNumber(int number) {
                  return BasisOfRecord.forNumber(number);
                }
              };

        private final int value;

        private BasisOfRecord(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:org.gbif.maps.io.TileFeatures.Layer.BasisOfRecord)
      }

      private int bitField0_;
      public static final int BASISOFRECORD_FIELD_NUMBER = 1;
      private int basisOfRecord_;
      /**
       * <code>required .org.gbif.maps.io.TileFeatures.Layer.BasisOfRecord basisOfRecord = 1;</code>
       */
      @java.lang.Override
      public boolean hasBasisOfRecord() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .org.gbif.maps.io.TileFeatures.Layer.BasisOfRecord basisOfRecord = 1;</code>
       */
      @java.lang.Override
      public org.gbif.maps.io.TileFeature.TileFeatures.Layer.BasisOfRecord getBasisOfRecord() {
        org.gbif.maps.io.TileFeature.TileFeatures.Layer.BasisOfRecord result = org.gbif.maps.io.TileFeature.TileFeatures.Layer.BasisOfRecord.forNumber(basisOfRecord_);
        return result == null ? org.gbif.maps.io.TileFeature.TileFeatures.Layer.BasisOfRecord.UNKNOWN : result;
      }
      /**
       * <code>required .org.gbif.maps.io.TileFeatures.Layer.BasisOfRecord basisOfRecord = 1;</code>
       */
      private void setBasisOfRecord(org.gbif.maps.io.TileFeature.TileFeatures.Layer.BasisOfRecord value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        basisOfRecord_ = value.getNumber();
      }
      /**
       * <code>required .org.gbif.maps.io.TileFeatures.Layer.BasisOfRecord basisOfRecord = 1;</code>
       */
      private void clearBasisOfRecord() {
        bitField0_ = (bitField0_ & ~0x00000001);
        basisOfRecord_ = 0;
      }

      public static final int X_FIELD_NUMBER = 2;
      private com.google.protobuf.Internal.IntList x_;
      /**
       * <code>repeated int32 x = 2 [packed = true];</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getXList() {
        return x_;
      }
      /**
       * <code>repeated int32 x = 2 [packed = true];</code>
       */
      @java.lang.Override
      public int getXCount() {
        return x_.size();
      }
      /**
       * <code>repeated int32 x = 2 [packed = true];</code>
       */
      @java.lang.Override
      public int getX(int index) {
        return x_.getInt(index);
      }
      private int xMemoizedSerializedSize = -1;
      private void ensureXIsMutable() {
        if (!x_.isModifiable()) {
          x_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(x_);
         }
      }
      /**
       * <code>repeated int32 x = 2 [packed = true];</code>
       */
      private void setX(
          int index, int value) {
        ensureXIsMutable();
        x_.setInt(index, value);
      }
      /**
       * <code>repeated int32 x = 2 [packed = true];</code>
       */
      private void addX(int value) {
        ensureXIsMutable();
        x_.addInt(value);
      }
      /**
       * <code>repeated int32 x = 2 [packed = true];</code>
       */
      private void addAllX(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureXIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, x_);
      }
      /**
       * <code>repeated int32 x = 2 [packed = true];</code>
       */
      private void clearX() {
        x_ = emptyIntList();
      }

      public static final int Y_FIELD_NUMBER = 3;
      private com.google.protobuf.Internal.IntList y_;
      /**
       * <code>repeated int32 y = 3 [packed = true];</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getYList() {
        return y_;
      }
      /**
       * <code>repeated int32 y = 3 [packed = true];</code>
       */
      @java.lang.Override
      public int getYCount() {
        return y_.size();
      }
      /**
       * <code>repeated int32 y = 3 [packed = true];</code>
       */
      @java.lang.Override
      public int getY(int index) {
        return y_.getInt(index);
      }
      private int yMemoizedSerializedSize = -1;
      private void ensureYIsMutable() {
        if (!y_.isModifiable()) {
          y_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(y_);
         }
      }
      /**
       * <code>repeated int32 y = 3 [packed = true];</code>
       */
      private void setY(
          int index, int value) {
        ensureYIsMutable();
        y_.setInt(index, value);
      }
      /**
       * <code>repeated int32 y = 3 [packed = true];</code>
       */
      private void addY(int value) {
        ensureYIsMutable();
        y_.addInt(value);
      }
      /**
       * <code>repeated int32 y = 3 [packed = true];</code>
       */
      private void addAllY(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureYIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, y_);
      }
      /**
       * <code>repeated int32 y = 3 [packed = true];</code>
       */
      private void clearY() {
        y_ = emptyIntList();
      }

      public static final int YEAR_FIELD_NUMBER = 4;
      private com.google.protobuf.Internal.IntList year_;
      /**
       * <code>repeated int32 year = 4 [packed = true];</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getYearList() {
        return year_;
      }
      /**
       * <code>repeated int32 year = 4 [packed = true];</code>
       */
      @java.lang.Override
      public int getYearCount() {
        return year_.size();
      }
      /**
       * <code>repeated int32 year = 4 [packed = true];</code>
       */
      @java.lang.Override
      public int getYear(int index) {
        return year_.getInt(index);
      }
      private int yearMemoizedSerializedSize = -1;
      private void ensureYearIsMutable() {
        if (!year_.isModifiable()) {
          year_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(year_);
         }
      }
      /**
       * <code>repeated int32 year = 4 [packed = true];</code>
       */
      private void setYear(
          int index, int value) {
        ensureYearIsMutable();
        year_.setInt(index, value);
      }
      /**
       * <code>repeated int32 year = 4 [packed = true];</code>
       */
      private void addYear(int value) {
        ensureYearIsMutable();
        year_.addInt(value);
      }
      /**
       * <code>repeated int32 year = 4 [packed = true];</code>
       */
      private void addAllYear(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureYearIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, year_);
      }
      /**
       * <code>repeated int32 year = 4 [packed = true];</code>
       */
      private void clearYear() {
        year_ = emptyIntList();
      }

      public static final int COUNT_FIELD_NUMBER = 5;
      private com.google.protobuf.Internal.IntList count_;
      /**
       * <code>repeated int32 count = 5 [packed = true];</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getCountList() {
        return count_;
      }
      /**
       * <code>repeated int32 count = 5 [packed = true];</code>
       */
      @java.lang.Override
      public int getCountCount() {
        return count_.size();
      }
      /**
       * <code>repeated int32 count = 5 [packed = true];</code>
       */
      @java.lang.Override
      public int getCount(int index) {
        return count_.getInt(index);
      }
      private int countMemoizedSerializedSize = -1;
      private void ensureCountIsMutable() {
        if (!count_.isModifiable()) {
          count_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(count_);
         }
      }
      /**
       * <code>repeated int32 count = 5 [packed = true];</code>
       */
      private void setCount(
          int index, int value) {
        ensureCountIsMutable();
        count_.setInt(index, value);
      }
      /**
       * <code>repeated int32 count = 5 [packed = true];</code>
       */
      private void addCount(int value) {
        ensureCountIsMutable();
        count_.addInt(value);
      }
      /**
       * <code>repeated int32 count = 5 [packed = true];</code>
       */
      private void addAllCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCountIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, count_);
      }
      /**
       * <code>repeated int32 count = 5 [packed = true];</code>
       */
      private void clearCount() {
        count_ = emptyIntList();
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, basisOfRecord_);
        }
        if (getXList().size() > 0) {
          output.writeUInt32NoTag(18);
          output.writeUInt32NoTag(xMemoizedSerializedSize);
        }
        for (int i = 0; i < x_.size(); i++) {
          output.writeInt32NoTag(x_.getInt(i));
        }
        if (getYList().size() > 0) {
          output.writeUInt32NoTag(26);
          output.writeUInt32NoTag(yMemoizedSerializedSize);
        }
        for (int i = 0; i < y_.size(); i++) {
          output.writeInt32NoTag(y_.getInt(i));
        }
        if (getYearList().size() > 0) {
          output.writeUInt32NoTag(34);
          output.writeUInt32NoTag(yearMemoizedSerializedSize);
        }
        for (int i = 0; i < year_.size(); i++) {
          output.writeInt32NoTag(year_.getInt(i));
        }
        if (getCountList().size() > 0) {
          output.writeUInt32NoTag(42);
          output.writeUInt32NoTag(countMemoizedSerializedSize);
        }
        for (int i = 0; i < count_.size(); i++) {
          output.writeInt32NoTag(count_.getInt(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, basisOfRecord_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < x_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(x_.getInt(i));
          }
          size += dataSize;
          if (!getXList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          xMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < y_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(y_.getInt(i));
          }
          size += dataSize;
          if (!getYList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          yMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < year_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(year_.getInt(i));
          }
          size += dataSize;
          if (!getYearList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          yearMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < count_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(count_.getInt(i));
          }
          size += dataSize;
          if (!getCountList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          countMemoizedSerializedSize = dataSize;
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static org.gbif.maps.io.TileFeature.TileFeatures.Layer parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.gbif.maps.io.TileFeature.TileFeatures.Layer parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.gbif.maps.io.TileFeature.TileFeatures.Layer parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.gbif.maps.io.TileFeature.TileFeatures.Layer parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.gbif.maps.io.TileFeature.TileFeatures.Layer parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.gbif.maps.io.TileFeature.TileFeatures.Layer parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.gbif.maps.io.TileFeature.TileFeatures.Layer parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.gbif.maps.io.TileFeature.TileFeatures.Layer parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.gbif.maps.io.TileFeature.TileFeatures.Layer parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static org.gbif.maps.io.TileFeature.TileFeatures.Layer parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.gbif.maps.io.TileFeature.TileFeatures.Layer parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.gbif.maps.io.TileFeature.TileFeatures.Layer parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(org.gbif.maps.io.TileFeature.TileFeatures.Layer prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * a layer contains the basis of record and year data
       * </pre>
       *
       * Protobuf type {@code org.gbif.maps.io.TileFeatures.Layer}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.gbif.maps.io.TileFeature.TileFeatures.Layer, Builder> implements
          // @@protoc_insertion_point(builder_implements:org.gbif.maps.io.TileFeatures.Layer)
          org.gbif.maps.io.TileFeature.TileFeatures.LayerOrBuilder {
        // Construct using org.gbif.maps.io.TileFeature.TileFeatures.Layer.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>required .org.gbif.maps.io.TileFeatures.Layer.BasisOfRecord basisOfRecord = 1;</code>
         */
        @java.lang.Override
        public boolean hasBasisOfRecord() {
          return instance.hasBasisOfRecord();
        }
        /**
         * <code>required .org.gbif.maps.io.TileFeatures.Layer.BasisOfRecord basisOfRecord = 1;</code>
         */
        @java.lang.Override
        public org.gbif.maps.io.TileFeature.TileFeatures.Layer.BasisOfRecord getBasisOfRecord() {
          return instance.getBasisOfRecord();
        }
        /**
         * <code>required .org.gbif.maps.io.TileFeatures.Layer.BasisOfRecord basisOfRecord = 1;</code>
         */
        public Builder setBasisOfRecord(org.gbif.maps.io.TileFeature.TileFeatures.Layer.BasisOfRecord value) {
          copyOnWrite();
          instance.setBasisOfRecord(value);
          return this;
        }
        /**
         * <code>required .org.gbif.maps.io.TileFeatures.Layer.BasisOfRecord basisOfRecord = 1;</code>
         */
        public Builder clearBasisOfRecord() {
          copyOnWrite();
          instance.clearBasisOfRecord();
          return this;
        }

        /**
         * <code>repeated int32 x = 2 [packed = true];</code>
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
            getXList() {
          return java.util.Collections.unmodifiableList(
              instance.getXList());
        }
        /**
         * <code>repeated int32 x = 2 [packed = true];</code>
         */
        @java.lang.Override
        public int getXCount() {
          return instance.getXCount();
        }
        /**
         * <code>repeated int32 x = 2 [packed = true];</code>
         */
        @java.lang.Override
        public int getX(int index) {
          return instance.getX(index);
        }
        /**
         * <code>repeated int32 x = 2 [packed = true];</code>
         */
        public Builder setX(
            int index, int value) {
          copyOnWrite();
          instance.setX(index, value);
          return this;
        }
        /**
         * <code>repeated int32 x = 2 [packed = true];</code>
         */
        public Builder addX(int value) {
          copyOnWrite();
          instance.addX(value);
          return this;
        }
        /**
         * <code>repeated int32 x = 2 [packed = true];</code>
         */
        public Builder addAllX(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          copyOnWrite();
          instance.addAllX(values);
          return this;
        }
        /**
         * <code>repeated int32 x = 2 [packed = true];</code>
         */
        public Builder clearX() {
          copyOnWrite();
          instance.clearX();
          return this;
        }

        /**
         * <code>repeated int32 y = 3 [packed = true];</code>
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
            getYList() {
          return java.util.Collections.unmodifiableList(
              instance.getYList());
        }
        /**
         * <code>repeated int32 y = 3 [packed = true];</code>
         */
        @java.lang.Override
        public int getYCount() {
          return instance.getYCount();
        }
        /**
         * <code>repeated int32 y = 3 [packed = true];</code>
         */
        @java.lang.Override
        public int getY(int index) {
          return instance.getY(index);
        }
        /**
         * <code>repeated int32 y = 3 [packed = true];</code>
         */
        public Builder setY(
            int index, int value) {
          copyOnWrite();
          instance.setY(index, value);
          return this;
        }
        /**
         * <code>repeated int32 y = 3 [packed = true];</code>
         */
        public Builder addY(int value) {
          copyOnWrite();
          instance.addY(value);
          return this;
        }
        /**
         * <code>repeated int32 y = 3 [packed = true];</code>
         */
        public Builder addAllY(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          copyOnWrite();
          instance.addAllY(values);
          return this;
        }
        /**
         * <code>repeated int32 y = 3 [packed = true];</code>
         */
        public Builder clearY() {
          copyOnWrite();
          instance.clearY();
          return this;
        }

        /**
         * <code>repeated int32 year = 4 [packed = true];</code>
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
            getYearList() {
          return java.util.Collections.unmodifiableList(
              instance.getYearList());
        }
        /**
         * <code>repeated int32 year = 4 [packed = true];</code>
         */
        @java.lang.Override
        public int getYearCount() {
          return instance.getYearCount();
        }
        /**
         * <code>repeated int32 year = 4 [packed = true];</code>
         */
        @java.lang.Override
        public int getYear(int index) {
          return instance.getYear(index);
        }
        /**
         * <code>repeated int32 year = 4 [packed = true];</code>
         */
        public Builder setYear(
            int index, int value) {
          copyOnWrite();
          instance.setYear(index, value);
          return this;
        }
        /**
         * <code>repeated int32 year = 4 [packed = true];</code>
         */
        public Builder addYear(int value) {
          copyOnWrite();
          instance.addYear(value);
          return this;
        }
        /**
         * <code>repeated int32 year = 4 [packed = true];</code>
         */
        public Builder addAllYear(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          copyOnWrite();
          instance.addAllYear(values);
          return this;
        }
        /**
         * <code>repeated int32 year = 4 [packed = true];</code>
         */
        public Builder clearYear() {
          copyOnWrite();
          instance.clearYear();
          return this;
        }

        /**
         * <code>repeated int32 count = 5 [packed = true];</code>
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
            getCountList() {
          return java.util.Collections.unmodifiableList(
              instance.getCountList());
        }
        /**
         * <code>repeated int32 count = 5 [packed = true];</code>
         */
        @java.lang.Override
        public int getCountCount() {
          return instance.getCountCount();
        }
        /**
         * <code>repeated int32 count = 5 [packed = true];</code>
         */
        @java.lang.Override
        public int getCount(int index) {
          return instance.getCount(index);
        }
        /**
         * <code>repeated int32 count = 5 [packed = true];</code>
         */
        public Builder setCount(
            int index, int value) {
          copyOnWrite();
          instance.setCount(index, value);
          return this;
        }
        /**
         * <code>repeated int32 count = 5 [packed = true];</code>
         */
        public Builder addCount(int value) {
          copyOnWrite();
          instance.addCount(value);
          return this;
        }
        /**
         * <code>repeated int32 count = 5 [packed = true];</code>
         */
        public Builder addAllCount(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          copyOnWrite();
          instance.addAllCount(values);
          return this;
        }
        /**
         * <code>repeated int32 count = 5 [packed = true];</code>
         */
        public Builder clearCount() {
          copyOnWrite();
          instance.clearCount();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:org.gbif.maps.io.TileFeatures.Layer)
      }
      private byte memoizedIsInitialized = 2;
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.gbif.maps.io.TileFeature.TileFeatures.Layer();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case IS_INITIALIZED: {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return DEFAULT_INSTANCE;
            if (isInitialized == 0) return null;

            boolean shouldMemoize = ((Boolean) arg0).booleanValue();
            if (!hasBasisOfRecord()) {
              return null;
            }
            return DEFAULT_INSTANCE;

          }
          case MAKE_IMMUTABLE: {
            x_.makeImmutable();
            y_.makeImmutable();
            year_.makeImmutable();
            count_.makeImmutable();
            return null;
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            org.gbif.maps.io.TileFeature.TileFeatures.Layer other = (org.gbif.maps.io.TileFeature.TileFeatures.Layer) arg1;
            basisOfRecord_ = visitor.visitInt(hasBasisOfRecord(), basisOfRecord_,
                other.hasBasisOfRecord(), other.basisOfRecord_);
            x_= visitor.visitIntList(x_, other.x_);
            y_= visitor.visitIntList(y_, other.y_);
            year_= visitor.visitIntList(year_, other.year_);
            count_= visitor.visitIntList(count_, other.count_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    int rawValue = input.readEnum();
                    org.gbif.maps.io.TileFeature.TileFeatures.Layer.BasisOfRecord value = org.gbif.maps.io.TileFeature.TileFeatures.Layer.BasisOfRecord.forNumber(rawValue);
                    if (value == null) {
                      super.mergeVarintField(1, rawValue);
                    } else {
                      bitField0_ |= 0x00000001;
                      basisOfRecord_ = rawValue;
                    }
                    break;
                  }
                  case 16: {
                    if (!x_.isModifiable()) {
                      x_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(x_);
                    }
                    x_.addInt(input.readInt32());
                    break;
                  }
                  case 18: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    if (!x_.isModifiable() && input.getBytesUntilLimit() > 0) {
                      x_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(x_);
                    }
                    while (input.getBytesUntilLimit() > 0) {
                      x_.addInt(input.readInt32());
                    }
                    input.popLimit(limit);
                    break;
                  }
                  case 24: {
                    if (!y_.isModifiable()) {
                      y_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(y_);
                    }
                    y_.addInt(input.readInt32());
                    break;
                  }
                  case 26: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    if (!y_.isModifiable() && input.getBytesUntilLimit() > 0) {
                      y_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(y_);
                    }
                    while (input.getBytesUntilLimit() > 0) {
                      y_.addInt(input.readInt32());
                    }
                    input.popLimit(limit);
                    break;
                  }
                  case 32: {
                    if (!year_.isModifiable()) {
                      year_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(year_);
                    }
                    year_.addInt(input.readInt32());
                    break;
                  }
                  case 34: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    if (!year_.isModifiable() && input.getBytesUntilLimit() > 0) {
                      year_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(year_);
                    }
                    while (input.getBytesUntilLimit() > 0) {
                      year_.addInt(input.readInt32());
                    }
                    input.popLimit(limit);
                    break;
                  }
                  case 40: {
                    if (!count_.isModifiable()) {
                      count_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(count_);
                    }
                    count_.addInt(input.readInt32());
                    break;
                  }
                  case 42: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    if (!count_.isModifiable() && input.getBytesUntilLimit() > 0) {
                      count_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(count_);
                    }
                    while (input.getBytesUntilLimit() > 0) {
                      count_.addInt(input.readInt32());
                    }
                    input.popLimit(limit);
                    break;
                  }
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<org.gbif.maps.io.TileFeature.TileFeatures.Layer> parser = PARSER;
            if (parser == null) {
              synchronized (org.gbif.maps.io.TileFeature.TileFeatures.Layer.class) {
                parser = PARSER;
                if (parser == null) {
                  parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return memoizedIsInitialized;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:org.gbif.maps.io.TileFeatures.Layer)
      private static final org.gbif.maps.io.TileFeature.TileFeatures.Layer DEFAULT_INSTANCE;
      static {
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = new Layer();
      }

      public static org.gbif.maps.io.TileFeature.TileFeatures.Layer getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Layer> PARSER;

      public static com.google.protobuf.Parser<Layer> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public static final int LAYERS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<org.gbif.maps.io.TileFeature.TileFeatures.Layer> layers_;
    /**
     * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.gbif.maps.io.TileFeature.TileFeatures.Layer> getLayersList() {
      return layers_;
    }
    /**
     * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
     */
    public java.util.List<? extends org.gbif.maps.io.TileFeature.TileFeatures.LayerOrBuilder> 
        getLayersOrBuilderList() {
      return layers_;
    }
    /**
     * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
     */
    @java.lang.Override
    public int getLayersCount() {
      return layers_.size();
    }
    /**
     * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
     */
    @java.lang.Override
    public org.gbif.maps.io.TileFeature.TileFeatures.Layer getLayers(int index) {
      return layers_.get(index);
    }
    /**
     * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
     */
    public org.gbif.maps.io.TileFeature.TileFeatures.LayerOrBuilder getLayersOrBuilder(
        int index) {
      return layers_.get(index);
    }
    private void ensureLayersIsMutable() {
      if (!layers_.isModifiable()) {
        layers_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(layers_);
       }
    }

    /**
     * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
     */
    private void setLayers(
        int index, org.gbif.maps.io.TileFeature.TileFeatures.Layer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureLayersIsMutable();
      layers_.set(index, value);
    }
    /**
     * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
     */
    private void setLayers(
        int index, org.gbif.maps.io.TileFeature.TileFeatures.Layer.Builder builderForValue) {
      ensureLayersIsMutable();
      layers_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
     */
    private void addLayers(org.gbif.maps.io.TileFeature.TileFeatures.Layer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureLayersIsMutable();
      layers_.add(value);
    }
    /**
     * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
     */
    private void addLayers(
        int index, org.gbif.maps.io.TileFeature.TileFeatures.Layer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureLayersIsMutable();
      layers_.add(index, value);
    }
    /**
     * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
     */
    private void addLayers(
        org.gbif.maps.io.TileFeature.TileFeatures.Layer.Builder builderForValue) {
      ensureLayersIsMutable();
      layers_.add(builderForValue.build());
    }
    /**
     * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
     */
    private void addLayers(
        int index, org.gbif.maps.io.TileFeature.TileFeatures.Layer.Builder builderForValue) {
      ensureLayersIsMutable();
      layers_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
     */
    private void addAllLayers(
        java.lang.Iterable<? extends org.gbif.maps.io.TileFeature.TileFeatures.Layer> values) {
      ensureLayersIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, layers_);
    }
    /**
     * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
     */
    private void clearLayers() {
      layers_ = emptyProtobufList();
    }
    /**
     * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
     */
    private void removeLayers(int index) {
      ensureLayersIsMutable();
      layers_.remove(index);
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < layers_.size(); i++) {
        output.writeMessage(1, layers_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < layers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, layers_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.gbif.maps.io.TileFeature.TileFeatures parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.gbif.maps.io.TileFeature.TileFeatures parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.gbif.maps.io.TileFeature.TileFeatures parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.gbif.maps.io.TileFeature.TileFeatures parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.gbif.maps.io.TileFeature.TileFeatures parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.gbif.maps.io.TileFeature.TileFeatures parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.gbif.maps.io.TileFeature.TileFeatures parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.gbif.maps.io.TileFeature.TileFeatures parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.gbif.maps.io.TileFeature.TileFeatures parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.gbif.maps.io.TileFeature.TileFeatures parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.gbif.maps.io.TileFeature.TileFeatures parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.gbif.maps.io.TileFeature.TileFeatures parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.gbif.maps.io.TileFeature.TileFeatures prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     **
     * An optimized encoding for tile data.
     * </pre>
     *
     * Protobuf type {@code org.gbif.maps.io.TileFeatures}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.gbif.maps.io.TileFeature.TileFeatures, Builder> implements
        // @@protoc_insertion_point(builder_implements:org.gbif.maps.io.TileFeatures)
        org.gbif.maps.io.TileFeature.TileFeaturesOrBuilder {
      // Construct using org.gbif.maps.io.TileFeature.TileFeatures.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
       */
      @java.lang.Override
      public java.util.List<org.gbif.maps.io.TileFeature.TileFeatures.Layer> getLayersList() {
        return java.util.Collections.unmodifiableList(
            instance.getLayersList());
      }
      /**
       * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
       */
      @java.lang.Override
      public int getLayersCount() {
        return instance.getLayersCount();
      }/**
       * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
       */
      @java.lang.Override
      public org.gbif.maps.io.TileFeature.TileFeatures.Layer getLayers(int index) {
        return instance.getLayers(index);
      }
      /**
       * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
       */
      public Builder setLayers(
          int index, org.gbif.maps.io.TileFeature.TileFeatures.Layer value) {
        copyOnWrite();
        instance.setLayers(index, value);
        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
       */
      public Builder setLayers(
          int index, org.gbif.maps.io.TileFeature.TileFeatures.Layer.Builder builderForValue) {
        copyOnWrite();
        instance.setLayers(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
       */
      public Builder addLayers(org.gbif.maps.io.TileFeature.TileFeatures.Layer value) {
        copyOnWrite();
        instance.addLayers(value);
        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
       */
      public Builder addLayers(
          int index, org.gbif.maps.io.TileFeature.TileFeatures.Layer value) {
        copyOnWrite();
        instance.addLayers(index, value);
        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
       */
      public Builder addLayers(
          org.gbif.maps.io.TileFeature.TileFeatures.Layer.Builder builderForValue) {
        copyOnWrite();
        instance.addLayers(builderForValue);
        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
       */
      public Builder addLayers(
          int index, org.gbif.maps.io.TileFeature.TileFeatures.Layer.Builder builderForValue) {
        copyOnWrite();
        instance.addLayers(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
       */
      public Builder addAllLayers(
          java.lang.Iterable<? extends org.gbif.maps.io.TileFeature.TileFeatures.Layer> values) {
        copyOnWrite();
        instance.addAllLayers(values);
        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
       */
      public Builder clearLayers() {
        copyOnWrite();
        instance.clearLayers();
        return this;
      }
      /**
       * <code>repeated .org.gbif.maps.io.TileFeatures.Layer layers = 1;</code>
       */
      public Builder removeLayers(int index) {
        copyOnWrite();
        instance.removeLayers(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.gbif.maps.io.TileFeatures)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.gbif.maps.io.TileFeature.TileFeatures();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getLayersCount(); i++) {
            if (!getLayers(i).isInitialized()) {
              return null;
            }
          }
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          layers_.makeImmutable();
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.gbif.maps.io.TileFeature.TileFeatures other = (org.gbif.maps.io.TileFeature.TileFeatures) arg1;
          layers_= visitor.visitList(layers_, other.layers_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  if (!layers_.isModifiable()) {
                    layers_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(layers_);
                  }
                  layers_.add(
                      input.readMessage(org.gbif.maps.io.TileFeature.TileFeatures.Layer.parser(), extensionRegistry));
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.gbif.maps.io.TileFeature.TileFeatures> parser = PARSER;
          if (parser == null) {
            synchronized (org.gbif.maps.io.TileFeature.TileFeatures.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:org.gbif.maps.io.TileFeatures)
    private static final org.gbif.maps.io.TileFeature.TileFeatures DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new TileFeatures();
    }

    public static org.gbif.maps.io.TileFeature.TileFeatures getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TileFeatures> PARSER;

    public static com.google.protobuf.Parser<TileFeatures> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
